//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DatabaseManager.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IDatabaseManager")]
    public interface IDatabaseManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/addUser", ReplyAction="http://tempuri.org/IDatabaseManager/addUserResponse")]
        void addUser(string name, string pass, bool ad, bool isAdmin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/addUser", ReplyAction="http://tempuri.org/IDatabaseManager/addUserResponse")]
        System.Threading.Tasks.Task addUserAsync(string name, string pass, bool ad, bool isAdmin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/login", ReplyAction="http://tempuri.org/IDatabaseManager/loginResponse")]
        SnusProjekat.User login(string name, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/login", ReplyAction="http://tempuri.org/IDatabaseManager/loginResponse")]
        System.Threading.Tasks.Task<SnusProjekat.User> loginAsync(string name, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/logout", ReplyAction="http://tempuri.org/IDatabaseManager/logoutResponse")]
        void logout();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/logout", ReplyAction="http://tempuri.org/IDatabaseManager/logoutResponse")]
        System.Threading.Tasks.Task logoutAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/inputDI", ReplyAction="http://tempuri.org/IDatabaseManager/inputDIResponse")]
        void inputDI(SnusProjekat.DI tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/inputDI", ReplyAction="http://tempuri.org/IDatabaseManager/inputDIResponse")]
        System.Threading.Tasks.Task inputDIAsync(SnusProjekat.DI tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/inputDO", ReplyAction="http://tempuri.org/IDatabaseManager/inputDOResponse")]
        void inputDO(SnusProjekat.DO tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/inputDO", ReplyAction="http://tempuri.org/IDatabaseManager/inputDOResponse")]
        System.Threading.Tasks.Task inputDOAsync(SnusProjekat.DO tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/inputAO", ReplyAction="http://tempuri.org/IDatabaseManager/inputAOResponse")]
        void inputAO(SnusProjekat.AO tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/inputAO", ReplyAction="http://tempuri.org/IDatabaseManager/inputAOResponse")]
        System.Threading.Tasks.Task inputAOAsync(SnusProjekat.AO tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/inputAI", ReplyAction="http://tempuri.org/IDatabaseManager/inputAIResponse")]
        void inputAI(SnusProjekat.AI tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/inputAI", ReplyAction="http://tempuri.org/IDatabaseManager/inputAIResponse")]
        System.Threading.Tasks.Task inputAIAsync(SnusProjekat.AI tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/InputValuesDO", ReplyAction="http://tempuri.org/IDatabaseManager/InputValuesDOResponse")]
        bool InputValuesDO(string id, string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/InputValuesDO", ReplyAction="http://tempuri.org/IDatabaseManager/InputValuesDOResponse")]
        System.Threading.Tasks.Task<bool> InputValuesDOAsync(string id, string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/InputValuesAO", ReplyAction="http://tempuri.org/IDatabaseManager/InputValuesAOResponse")]
        bool InputValuesAO(string id, string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/InputValuesAO", ReplyAction="http://tempuri.org/IDatabaseManager/InputValuesAOResponse")]
        System.Threading.Tasks.Task<bool> InputValuesAOAsync(string id, string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/onOffAITag", ReplyAction="http://tempuri.org/IDatabaseManager/onOffAITagResponse")]
        void onOffAITag(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/onOffAITag", ReplyAction="http://tempuri.org/IDatabaseManager/onOffAITagResponse")]
        System.Threading.Tasks.Task onOffAITagAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/onOffDITag", ReplyAction="http://tempuri.org/IDatabaseManager/onOffDITagResponse")]
        void onOffDITag(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/onOffDITag", ReplyAction="http://tempuri.org/IDatabaseManager/onOffDITagResponse")]
        System.Threading.Tasks.Task onOffDITagAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/deleteAITag", ReplyAction="http://tempuri.org/IDatabaseManager/deleteAITagResponse")]
        void deleteAITag(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/deleteAITag", ReplyAction="http://tempuri.org/IDatabaseManager/deleteAITagResponse")]
        System.Threading.Tasks.Task deleteAITagAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/deleteDITag", ReplyAction="http://tempuri.org/IDatabaseManager/deleteDITagResponse")]
        void deleteDITag(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/deleteDITag", ReplyAction="http://tempuri.org/IDatabaseManager/deleteDITagResponse")]
        System.Threading.Tasks.Task deleteDITagAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/deleteAOTag", ReplyAction="http://tempuri.org/IDatabaseManager/deleteAOTagResponse")]
        void deleteAOTag(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/deleteAOTag", ReplyAction="http://tempuri.org/IDatabaseManager/deleteAOTagResponse")]
        System.Threading.Tasks.Task deleteAOTagAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/deleteDOTag", ReplyAction="http://tempuri.org/IDatabaseManager/deleteDOTagResponse")]
        void deleteDOTag(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/deleteDOTag", ReplyAction="http://tempuri.org/IDatabaseManager/deleteDOTagResponse")]
        System.Threading.Tasks.Task deleteDOTagAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/displayTagValueAO", ReplyAction="http://tempuri.org/IDatabaseManager/displayTagValueAOResponse")]
        string displayTagValueAO(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/displayTagValueAO", ReplyAction="http://tempuri.org/IDatabaseManager/displayTagValueAOResponse")]
        System.Threading.Tasks.Task<string> displayTagValueAOAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/displayTagValueAI", ReplyAction="http://tempuri.org/IDatabaseManager/displayTagValueAIResponse")]
        string displayTagValueAI(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/displayTagValueAI", ReplyAction="http://tempuri.org/IDatabaseManager/displayTagValueAIResponse")]
        System.Threading.Tasks.Task<string> displayTagValueAIAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/displayTagValueDO", ReplyAction="http://tempuri.org/IDatabaseManager/displayTagValueDOResponse")]
        string displayTagValueDO(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/displayTagValueDO", ReplyAction="http://tempuri.org/IDatabaseManager/displayTagValueDOResponse")]
        System.Threading.Tasks.Task<string> displayTagValueDOAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/displayTagValueDI", ReplyAction="http://tempuri.org/IDatabaseManager/displayTagValueDIResponse")]
        string displayTagValueDI(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/displayTagValueDI", ReplyAction="http://tempuri.org/IDatabaseManager/displayTagValueDIResponse")]
        System.Threading.Tasks.Task<string> displayTagValueDIAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/turningOnScaning", ReplyAction="http://tempuri.org/IDatabaseManager/turningOnScaningResponse")]
        void turningOnScaning(string tagName, string tagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/turningOnScaning", ReplyAction="http://tempuri.org/IDatabaseManager/turningOnScaningResponse")]
        System.Threading.Tasks.Task turningOnScaningAsync(string tagName, string tagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/turningOffScaning", ReplyAction="http://tempuri.org/IDatabaseManager/turningOffScaningResponse")]
        void turningOffScaning(string tagName, string tagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/turningOffScaning", ReplyAction="http://tempuri.org/IDatabaseManager/turningOffScaningResponse")]
        System.Threading.Tasks.Task turningOffScaningAsync(string tagName, string tagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/readConfig", ReplyAction="http://tempuri.org/IDatabaseManager/readConfigResponse")]
        void readConfig();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/readConfig", ReplyAction="http://tempuri.org/IDatabaseManager/readConfigResponse")]
        System.Threading.Tasks.Task readConfigAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/printToConfigAI", ReplyAction="http://tempuri.org/IDatabaseManager/printToConfigAIResponse")]
        void printToConfigAI(SnusProjekat.AI tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/printToConfigAI", ReplyAction="http://tempuri.org/IDatabaseManager/printToConfigAIResponse")]
        System.Threading.Tasks.Task printToConfigAIAsync(SnusProjekat.AI tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/printToConfigDI", ReplyAction="http://tempuri.org/IDatabaseManager/printToConfigDIResponse")]
        void printToConfigDI(SnusProjekat.DI tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/printToConfigDI", ReplyAction="http://tempuri.org/IDatabaseManager/printToConfigDIResponse")]
        System.Threading.Tasks.Task printToConfigDIAsync(SnusProjekat.DI tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/printToConfigAO", ReplyAction="http://tempuri.org/IDatabaseManager/printToConfigAOResponse")]
        void printToConfigAO(SnusProjekat.AO tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/printToConfigAO", ReplyAction="http://tempuri.org/IDatabaseManager/printToConfigAOResponse")]
        System.Threading.Tasks.Task printToConfigAOAsync(SnusProjekat.AO tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/printToConfigDO", ReplyAction="http://tempuri.org/IDatabaseManager/printToConfigDOResponse")]
        void printToConfigDO(SnusProjekat.DO tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/printToConfigDO", ReplyAction="http://tempuri.org/IDatabaseManager/printToConfigDOResponse")]
        System.Threading.Tasks.Task printToConfigDOAsync(SnusProjekat.DO tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/addAlarm", ReplyAction="http://tempuri.org/IDatabaseManager/addAlarmResponse")]
        void addAlarm(string type, int priority, double value, string tagName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/addAlarm", ReplyAction="http://tempuri.org/IDatabaseManager/addAlarmResponse")]
        System.Threading.Tasks.Task addAlarmAsync(string type, int priority, double value, string tagName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/deleteAlarmFromFile", ReplyAction="http://tempuri.org/IDatabaseManager/deleteAlarmFromFileResponse")]
        void deleteAlarmFromFile(string tagId, string type, string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManager/deleteAlarmFromFile", ReplyAction="http://tempuri.org/IDatabaseManager/deleteAlarmFromFileResponse")]
        System.Threading.Tasks.Task deleteAlarmFromFileAsync(string tagId, string type, string value);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDatabaseManagerChannel : DatabaseManager.ServiceReference1.IDatabaseManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DatabaseManagerClient : System.ServiceModel.ClientBase<DatabaseManager.ServiceReference1.IDatabaseManager>, DatabaseManager.ServiceReference1.IDatabaseManager {
        
        public DatabaseManagerClient() {
        }
        
        public DatabaseManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DatabaseManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DatabaseManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DatabaseManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void addUser(string name, string pass, bool ad, bool isAdmin) {
            base.Channel.addUser(name, pass, ad, isAdmin);
        }
        
        public System.Threading.Tasks.Task addUserAsync(string name, string pass, bool ad, bool isAdmin) {
            return base.Channel.addUserAsync(name, pass, ad, isAdmin);
        }
        
        public SnusProjekat.User login(string name, string pass) {
            return base.Channel.login(name, pass);
        }
        
        public System.Threading.Tasks.Task<SnusProjekat.User> loginAsync(string name, string pass) {
            return base.Channel.loginAsync(name, pass);
        }
        
        public void logout() {
            base.Channel.logout();
        }
        
        public System.Threading.Tasks.Task logoutAsync() {
            return base.Channel.logoutAsync();
        }
        
        public void inputDI(SnusProjekat.DI tag) {
            base.Channel.inputDI(tag);
        }
        
        public System.Threading.Tasks.Task inputDIAsync(SnusProjekat.DI tag) {
            return base.Channel.inputDIAsync(tag);
        }
        
        public void inputDO(SnusProjekat.DO tag) {
            base.Channel.inputDO(tag);
        }
        
        public System.Threading.Tasks.Task inputDOAsync(SnusProjekat.DO tag) {
            return base.Channel.inputDOAsync(tag);
        }
        
        public void inputAO(SnusProjekat.AO tag) {
            base.Channel.inputAO(tag);
        }
        
        public System.Threading.Tasks.Task inputAOAsync(SnusProjekat.AO tag) {
            return base.Channel.inputAOAsync(tag);
        }
        
        public void inputAI(SnusProjekat.AI tag) {
            base.Channel.inputAI(tag);
        }
        
        public System.Threading.Tasks.Task inputAIAsync(SnusProjekat.AI tag) {
            return base.Channel.inputAIAsync(tag);
        }
        
        public bool InputValuesDO(string id, string value) {
            return base.Channel.InputValuesDO(id, value);
        }
        
        public System.Threading.Tasks.Task<bool> InputValuesDOAsync(string id, string value) {
            return base.Channel.InputValuesDOAsync(id, value);
        }
        
        public bool InputValuesAO(string id, string value) {
            return base.Channel.InputValuesAO(id, value);
        }
        
        public System.Threading.Tasks.Task<bool> InputValuesAOAsync(string id, string value) {
            return base.Channel.InputValuesAOAsync(id, value);
        }
        
        public void onOffAITag(string id) {
            base.Channel.onOffAITag(id);
        }
        
        public System.Threading.Tasks.Task onOffAITagAsync(string id) {
            return base.Channel.onOffAITagAsync(id);
        }
        
        public void onOffDITag(string id) {
            base.Channel.onOffDITag(id);
        }
        
        public System.Threading.Tasks.Task onOffDITagAsync(string id) {
            return base.Channel.onOffDITagAsync(id);
        }
        
        public void deleteAITag(string id) {
            base.Channel.deleteAITag(id);
        }
        
        public System.Threading.Tasks.Task deleteAITagAsync(string id) {
            return base.Channel.deleteAITagAsync(id);
        }
        
        public void deleteDITag(string id) {
            base.Channel.deleteDITag(id);
        }
        
        public System.Threading.Tasks.Task deleteDITagAsync(string id) {
            return base.Channel.deleteDITagAsync(id);
        }
        
        public void deleteAOTag(string id) {
            base.Channel.deleteAOTag(id);
        }
        
        public System.Threading.Tasks.Task deleteAOTagAsync(string id) {
            return base.Channel.deleteAOTagAsync(id);
        }
        
        public void deleteDOTag(string id) {
            base.Channel.deleteDOTag(id);
        }
        
        public System.Threading.Tasks.Task deleteDOTagAsync(string id) {
            return base.Channel.deleteDOTagAsync(id);
        }
        
        public string displayTagValueAO(string id) {
            return base.Channel.displayTagValueAO(id);
        }
        
        public System.Threading.Tasks.Task<string> displayTagValueAOAsync(string id) {
            return base.Channel.displayTagValueAOAsync(id);
        }
        
        public string displayTagValueAI(string id) {
            return base.Channel.displayTagValueAI(id);
        }
        
        public System.Threading.Tasks.Task<string> displayTagValueAIAsync(string id) {
            return base.Channel.displayTagValueAIAsync(id);
        }
        
        public string displayTagValueDO(string id) {
            return base.Channel.displayTagValueDO(id);
        }
        
        public System.Threading.Tasks.Task<string> displayTagValueDOAsync(string id) {
            return base.Channel.displayTagValueDOAsync(id);
        }
        
        public string displayTagValueDI(string id) {
            return base.Channel.displayTagValueDI(id);
        }
        
        public System.Threading.Tasks.Task<string> displayTagValueDIAsync(string id) {
            return base.Channel.displayTagValueDIAsync(id);
        }
        
        public void turningOnScaning(string tagName, string tagId) {
            base.Channel.turningOnScaning(tagName, tagId);
        }
        
        public System.Threading.Tasks.Task turningOnScaningAsync(string tagName, string tagId) {
            return base.Channel.turningOnScaningAsync(tagName, tagId);
        }
        
        public void turningOffScaning(string tagName, string tagId) {
            base.Channel.turningOffScaning(tagName, tagId);
        }
        
        public System.Threading.Tasks.Task turningOffScaningAsync(string tagName, string tagId) {
            return base.Channel.turningOffScaningAsync(tagName, tagId);
        }
        
        public void readConfig() {
            base.Channel.readConfig();
        }
        
        public System.Threading.Tasks.Task readConfigAsync() {
            return base.Channel.readConfigAsync();
        }
        
        public void printToConfigAI(SnusProjekat.AI tag) {
            base.Channel.printToConfigAI(tag);
        }
        
        public System.Threading.Tasks.Task printToConfigAIAsync(SnusProjekat.AI tag) {
            return base.Channel.printToConfigAIAsync(tag);
        }
        
        public void printToConfigDI(SnusProjekat.DI tag) {
            base.Channel.printToConfigDI(tag);
        }
        
        public System.Threading.Tasks.Task printToConfigDIAsync(SnusProjekat.DI tag) {
            return base.Channel.printToConfigDIAsync(tag);
        }
        
        public void printToConfigAO(SnusProjekat.AO tag) {
            base.Channel.printToConfigAO(tag);
        }
        
        public System.Threading.Tasks.Task printToConfigAOAsync(SnusProjekat.AO tag) {
            return base.Channel.printToConfigAOAsync(tag);
        }
        
        public void printToConfigDO(SnusProjekat.DO tag) {
            base.Channel.printToConfigDO(tag);
        }
        
        public System.Threading.Tasks.Task printToConfigDOAsync(SnusProjekat.DO tag) {
            return base.Channel.printToConfigDOAsync(tag);
        }
        
        public void addAlarm(string type, int priority, double value, string tagName) {
            base.Channel.addAlarm(type, priority, value, tagName);
        }
        
        public System.Threading.Tasks.Task addAlarmAsync(string type, int priority, double value, string tagName) {
            return base.Channel.addAlarmAsync(type, priority, value, tagName);
        }
        
        public void deleteAlarmFromFile(string tagId, string type, string value) {
            base.Channel.deleteAlarmFromFile(tagId, type, value);
        }
        
        public System.Threading.Tasks.Task deleteAlarmFromFileAsync(string tagId, string type, string value) {
            return base.Channel.deleteAlarmFromFileAsync(tagId, type, value);
        }
    }
}
